def merge_sort(list):  
    
    if len(list) <= 1:         # [10,9,8,7] [10,9] [8,7]  
        return list                         #[10]:left [9]:right [8]:left [7]:right
    
    left_half, right_half = split(list) 
    left = merge_sort(left_half)
    right = merge_sort(right_half)
    
    return merge(left, right)

def split(list):
    
    mid = len(list) // 2
    left = list[:mid] #not including mid
    right = list[mid:]
    
    return left, right
    
def merge(left, right):
    
    l = []                 # l1=[7,8] l2=[9,10]
    left_index = 0
    right_index = 0
    
    while left_index < len(left) and right_index < len(right):
        print(l)
        if left[left_index] < right[right_index]:
            l.append(left[left_index])
            left_index += 1
        
        else:
            l.append(right[right_index])
            right_index += 1
    
    while left_index < len(left):
        l.append(left[left_index])
        left_index += 1
    while right_index < len(right):    
        l.append(right[right_index])
        right_index += 1
    
    return l

    

sorted = merge_sort([10,9,8,7,6,5,4,3,2,1])
print(sorted)
